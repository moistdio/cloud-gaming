version: "3.8"

services:
  gaming-platform:
    build: .
    container_name: cloud-gaming-platform
    restart: unless-stopped
    ports:
      - "15000:5000"
    volumes:
      # Mount Docker socket to manage containers
      - /var/run/docker.sock:/var/run/docker.sock
      # Persistent database storage
      - ./data:/app/data
      # Platform configuration
      - ./config:/app/config
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - BASE_PORT=12000
      - MAX_INSTANCES=50
      - DOCKER_IMAGE=josh5/steam-headless:latest
    networks:
      - gaming-network
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gaming-platform.rule=Host(`gaming.localhost`)"
      - "traefik.http.services.gaming-platform.loadbalancer.server.port=5000"

  redis:
    image: redis:7-alpine
    container_name: gaming-platform-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - gaming-network
    command: redis-server --appendonly yes

  traefik:
    image: traefik:v2.10
    container_name: gaming-platform-traefik
    restart: unless-stopped
    ports:
      - "15080:80"
      - "15443:443"
      - "15081:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    networks:
      - gaming-network
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

networks:
  gaming-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  redis-data:
    driver: local 